// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: upmuDataProtobuf.proto

package serviceDataArchiver;

public final class UpmuDataProtobuf {
  private UpmuDataProtobuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface syncOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:serviceDataArchiver.syncOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 lockState = 1;</code>
     */
    boolean hasLockState();
    /**
     * <code>required uint32 lockState = 1;</code>
     */
    int getLockState();

    /**
     * <code>required float L1angle = 2;</code>
     */
    boolean hasL1Angle();
    /**
     * <code>required float L1angle = 2;</code>
     */
    float getL1Angle();

    /**
     * <code>required float L1mag = 3;</code>
     */
    boolean hasL1Mag();
    /**
     * <code>required float L1mag = 3;</code>
     */
    float getL1Mag();

    /**
     * <code>required float L2angle = 4;</code>
     */
    boolean hasL2Angle();
    /**
     * <code>required float L2angle = 4;</code>
     */
    float getL2Angle();

    /**
     * <code>required float L2mag = 5;</code>
     */
    boolean hasL2Mag();
    /**
     * <code>required float L2mag = 5;</code>
     */
    float getL2Mag();

    /**
     * <code>required float L3angle = 6;</code>
     */
    boolean hasL3Angle();
    /**
     * <code>required float L3angle = 6;</code>
     */
    float getL3Angle();

    /**
     * <code>required float L3mag = 7;</code>
     */
    boolean hasL3Mag();
    /**
     * <code>required float L3mag = 7;</code>
     */
    float getL3Mag();

    /**
     * <code>required float C1angle = 8;</code>
     */
    boolean hasC1Angle();
    /**
     * <code>required float C1angle = 8;</code>
     */
    float getC1Angle();

    /**
     * <code>required float C1mag = 9;</code>
     */
    boolean hasC1Mag();
    /**
     * <code>required float C1mag = 9;</code>
     */
    float getC1Mag();

    /**
     * <code>required float C2angle = 10;</code>
     */
    boolean hasC2Angle();
    /**
     * <code>required float C2angle = 10;</code>
     */
    float getC2Angle();

    /**
     * <code>required float C2mag = 11;</code>
     */
    boolean hasC2Mag();
    /**
     * <code>required float C2mag = 11;</code>
     */
    float getC2Mag();

    /**
     * <code>required float C3angle = 12;</code>
     */
    boolean hasC3Angle();
    /**
     * <code>required float C3angle = 12;</code>
     */
    float getC3Angle();

    /**
     * <code>required float C3mag = 13;</code>
     */
    boolean hasC3Mag();
    /**
     * <code>required float C3mag = 13;</code>
     */
    float getC3Mag();
  }
  /**
   * Protobuf type {@code serviceDataArchiver.syncOutput}
   */
  public static final class syncOutput extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:serviceDataArchiver.syncOutput)
      syncOutputOrBuilder {
    // Use syncOutput.newBuilder() to construct.
    private syncOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private syncOutput(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final syncOutput defaultInstance;
    public static syncOutput getDefaultInstance() {
      return defaultInstance;
    }

    public syncOutput getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private syncOutput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lockState_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              l1Angle_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              l1Mag_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              l2Angle_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              l2Mag_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              l3Angle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              l3Mag_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              c1Angle_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              c1Mag_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              c2Angle_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              c2Mag_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              c3Angle_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              c3Mag_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_syncOutput_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_syncOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              serviceDataArchiver.UpmuDataProtobuf.syncOutput.class, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder.class);
    }

    public static com.google.protobuf.Parser<syncOutput> PARSER =
        new com.google.protobuf.AbstractParser<syncOutput>() {
      public syncOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new syncOutput(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<syncOutput> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LOCKSTATE_FIELD_NUMBER = 1;
    private int lockState_;
    /**
     * <code>required uint32 lockState = 1;</code>
     */
    public boolean hasLockState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 lockState = 1;</code>
     */
    public int getLockState() {
      return lockState_;
    }

    public static final int L1ANGLE_FIELD_NUMBER = 2;
    private float l1Angle_;
    /**
     * <code>required float L1angle = 2;</code>
     */
    public boolean hasL1Angle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float L1angle = 2;</code>
     */
    public float getL1Angle() {
      return l1Angle_;
    }

    public static final int L1MAG_FIELD_NUMBER = 3;
    private float l1Mag_;
    /**
     * <code>required float L1mag = 3;</code>
     */
    public boolean hasL1Mag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float L1mag = 3;</code>
     */
    public float getL1Mag() {
      return l1Mag_;
    }

    public static final int L2ANGLE_FIELD_NUMBER = 4;
    private float l2Angle_;
    /**
     * <code>required float L2angle = 4;</code>
     */
    public boolean hasL2Angle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float L2angle = 4;</code>
     */
    public float getL2Angle() {
      return l2Angle_;
    }

    public static final int L2MAG_FIELD_NUMBER = 5;
    private float l2Mag_;
    /**
     * <code>required float L2mag = 5;</code>
     */
    public boolean hasL2Mag() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float L2mag = 5;</code>
     */
    public float getL2Mag() {
      return l2Mag_;
    }

    public static final int L3ANGLE_FIELD_NUMBER = 6;
    private float l3Angle_;
    /**
     * <code>required float L3angle = 6;</code>
     */
    public boolean hasL3Angle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float L3angle = 6;</code>
     */
    public float getL3Angle() {
      return l3Angle_;
    }

    public static final int L3MAG_FIELD_NUMBER = 7;
    private float l3Mag_;
    /**
     * <code>required float L3mag = 7;</code>
     */
    public boolean hasL3Mag() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float L3mag = 7;</code>
     */
    public float getL3Mag() {
      return l3Mag_;
    }

    public static final int C1ANGLE_FIELD_NUMBER = 8;
    private float c1Angle_;
    /**
     * <code>required float C1angle = 8;</code>
     */
    public boolean hasC1Angle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float C1angle = 8;</code>
     */
    public float getC1Angle() {
      return c1Angle_;
    }

    public static final int C1MAG_FIELD_NUMBER = 9;
    private float c1Mag_;
    /**
     * <code>required float C1mag = 9;</code>
     */
    public boolean hasC1Mag() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required float C1mag = 9;</code>
     */
    public float getC1Mag() {
      return c1Mag_;
    }

    public static final int C2ANGLE_FIELD_NUMBER = 10;
    private float c2Angle_;
    /**
     * <code>required float C2angle = 10;</code>
     */
    public boolean hasC2Angle() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required float C2angle = 10;</code>
     */
    public float getC2Angle() {
      return c2Angle_;
    }

    public static final int C2MAG_FIELD_NUMBER = 11;
    private float c2Mag_;
    /**
     * <code>required float C2mag = 11;</code>
     */
    public boolean hasC2Mag() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required float C2mag = 11;</code>
     */
    public float getC2Mag() {
      return c2Mag_;
    }

    public static final int C3ANGLE_FIELD_NUMBER = 12;
    private float c3Angle_;
    /**
     * <code>required float C3angle = 12;</code>
     */
    public boolean hasC3Angle() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required float C3angle = 12;</code>
     */
    public float getC3Angle() {
      return c3Angle_;
    }

    public static final int C3MAG_FIELD_NUMBER = 13;
    private float c3Mag_;
    /**
     * <code>required float C3mag = 13;</code>
     */
    public boolean hasC3Mag() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required float C3mag = 13;</code>
     */
    public float getC3Mag() {
      return c3Mag_;
    }

    private void initFields() {
      lockState_ = 0;
      l1Angle_ = 0F;
      l1Mag_ = 0F;
      l2Angle_ = 0F;
      l2Mag_ = 0F;
      l3Angle_ = 0F;
      l3Mag_ = 0F;
      c1Angle_ = 0F;
      c1Mag_ = 0F;
      c2Angle_ = 0F;
      c2Mag_ = 0F;
      c3Angle_ = 0F;
      c3Mag_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLockState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasL1Angle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasL1Mag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasL2Angle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasL2Mag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasL3Angle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasL3Mag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC1Angle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC1Mag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC2Angle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC2Mag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC3Angle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasC3Mag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, lockState_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, l1Angle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, l1Mag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, l2Angle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, l2Mag_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, l3Angle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, l3Mag_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, c1Angle_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, c1Mag_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, c2Angle_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, c2Mag_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, c3Angle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, c3Mag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, lockState_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, l1Angle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, l1Mag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, l2Angle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, l2Mag_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, l3Angle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, l3Mag_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, c1Angle_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, c1Mag_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, c2Angle_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, c2Mag_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, c3Angle_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, c3Mag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.syncOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(serviceDataArchiver.UpmuDataProtobuf.syncOutput prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code serviceDataArchiver.syncOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:serviceDataArchiver.syncOutput)
        serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_syncOutput_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_syncOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                serviceDataArchiver.UpmuDataProtobuf.syncOutput.class, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder.class);
      }

      // Construct using serviceDataArchiver.UpmuDataProtobuf.syncOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lockState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        l1Angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        l1Mag_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        l2Angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        l2Mag_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        l3Angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        l3Mag_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        c1Angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        c1Mag_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        c2Angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        c2Mag_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        c3Angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        c3Mag_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_syncOutput_descriptor;
      }

      public serviceDataArchiver.UpmuDataProtobuf.syncOutput getDefaultInstanceForType() {
        return serviceDataArchiver.UpmuDataProtobuf.syncOutput.getDefaultInstance();
      }

      public serviceDataArchiver.UpmuDataProtobuf.syncOutput build() {
        serviceDataArchiver.UpmuDataProtobuf.syncOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public serviceDataArchiver.UpmuDataProtobuf.syncOutput buildPartial() {
        serviceDataArchiver.UpmuDataProtobuf.syncOutput result = new serviceDataArchiver.UpmuDataProtobuf.syncOutput(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lockState_ = lockState_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.l1Angle_ = l1Angle_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.l1Mag_ = l1Mag_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.l2Angle_ = l2Angle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.l2Mag_ = l2Mag_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.l3Angle_ = l3Angle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.l3Mag_ = l3Mag_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.c1Angle_ = c1Angle_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.c1Mag_ = c1Mag_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.c2Angle_ = c2Angle_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.c2Mag_ = c2Mag_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.c3Angle_ = c3Angle_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.c3Mag_ = c3Mag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof serviceDataArchiver.UpmuDataProtobuf.syncOutput) {
          return mergeFrom((serviceDataArchiver.UpmuDataProtobuf.syncOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(serviceDataArchiver.UpmuDataProtobuf.syncOutput other) {
        if (other == serviceDataArchiver.UpmuDataProtobuf.syncOutput.getDefaultInstance()) return this;
        if (other.hasLockState()) {
          setLockState(other.getLockState());
        }
        if (other.hasL1Angle()) {
          setL1Angle(other.getL1Angle());
        }
        if (other.hasL1Mag()) {
          setL1Mag(other.getL1Mag());
        }
        if (other.hasL2Angle()) {
          setL2Angle(other.getL2Angle());
        }
        if (other.hasL2Mag()) {
          setL2Mag(other.getL2Mag());
        }
        if (other.hasL3Angle()) {
          setL3Angle(other.getL3Angle());
        }
        if (other.hasL3Mag()) {
          setL3Mag(other.getL3Mag());
        }
        if (other.hasC1Angle()) {
          setC1Angle(other.getC1Angle());
        }
        if (other.hasC1Mag()) {
          setC1Mag(other.getC1Mag());
        }
        if (other.hasC2Angle()) {
          setC2Angle(other.getC2Angle());
        }
        if (other.hasC2Mag()) {
          setC2Mag(other.getC2Mag());
        }
        if (other.hasC3Angle()) {
          setC3Angle(other.getC3Angle());
        }
        if (other.hasC3Mag()) {
          setC3Mag(other.getC3Mag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLockState()) {
          
          return false;
        }
        if (!hasL1Angle()) {
          
          return false;
        }
        if (!hasL1Mag()) {
          
          return false;
        }
        if (!hasL2Angle()) {
          
          return false;
        }
        if (!hasL2Mag()) {
          
          return false;
        }
        if (!hasL3Angle()) {
          
          return false;
        }
        if (!hasL3Mag()) {
          
          return false;
        }
        if (!hasC1Angle()) {
          
          return false;
        }
        if (!hasC1Mag()) {
          
          return false;
        }
        if (!hasC2Angle()) {
          
          return false;
        }
        if (!hasC2Mag()) {
          
          return false;
        }
        if (!hasC3Angle()) {
          
          return false;
        }
        if (!hasC3Mag()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        serviceDataArchiver.UpmuDataProtobuf.syncOutput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (serviceDataArchiver.UpmuDataProtobuf.syncOutput) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int lockState_ ;
      /**
       * <code>required uint32 lockState = 1;</code>
       */
      public boolean hasLockState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 lockState = 1;</code>
       */
      public int getLockState() {
        return lockState_;
      }
      /**
       * <code>required uint32 lockState = 1;</code>
       */
      public Builder setLockState(int value) {
        bitField0_ |= 0x00000001;
        lockState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 lockState = 1;</code>
       */
      public Builder clearLockState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lockState_ = 0;
        onChanged();
        return this;
      }

      private float l1Angle_ ;
      /**
       * <code>required float L1angle = 2;</code>
       */
      public boolean hasL1Angle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float L1angle = 2;</code>
       */
      public float getL1Angle() {
        return l1Angle_;
      }
      /**
       * <code>required float L1angle = 2;</code>
       */
      public Builder setL1Angle(float value) {
        bitField0_ |= 0x00000002;
        l1Angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float L1angle = 2;</code>
       */
      public Builder clearL1Angle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        l1Angle_ = 0F;
        onChanged();
        return this;
      }

      private float l1Mag_ ;
      /**
       * <code>required float L1mag = 3;</code>
       */
      public boolean hasL1Mag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float L1mag = 3;</code>
       */
      public float getL1Mag() {
        return l1Mag_;
      }
      /**
       * <code>required float L1mag = 3;</code>
       */
      public Builder setL1Mag(float value) {
        bitField0_ |= 0x00000004;
        l1Mag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float L1mag = 3;</code>
       */
      public Builder clearL1Mag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        l1Mag_ = 0F;
        onChanged();
        return this;
      }

      private float l2Angle_ ;
      /**
       * <code>required float L2angle = 4;</code>
       */
      public boolean hasL2Angle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float L2angle = 4;</code>
       */
      public float getL2Angle() {
        return l2Angle_;
      }
      /**
       * <code>required float L2angle = 4;</code>
       */
      public Builder setL2Angle(float value) {
        bitField0_ |= 0x00000008;
        l2Angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float L2angle = 4;</code>
       */
      public Builder clearL2Angle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        l2Angle_ = 0F;
        onChanged();
        return this;
      }

      private float l2Mag_ ;
      /**
       * <code>required float L2mag = 5;</code>
       */
      public boolean hasL2Mag() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required float L2mag = 5;</code>
       */
      public float getL2Mag() {
        return l2Mag_;
      }
      /**
       * <code>required float L2mag = 5;</code>
       */
      public Builder setL2Mag(float value) {
        bitField0_ |= 0x00000010;
        l2Mag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float L2mag = 5;</code>
       */
      public Builder clearL2Mag() {
        bitField0_ = (bitField0_ & ~0x00000010);
        l2Mag_ = 0F;
        onChanged();
        return this;
      }

      private float l3Angle_ ;
      /**
       * <code>required float L3angle = 6;</code>
       */
      public boolean hasL3Angle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float L3angle = 6;</code>
       */
      public float getL3Angle() {
        return l3Angle_;
      }
      /**
       * <code>required float L3angle = 6;</code>
       */
      public Builder setL3Angle(float value) {
        bitField0_ |= 0x00000020;
        l3Angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float L3angle = 6;</code>
       */
      public Builder clearL3Angle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        l3Angle_ = 0F;
        onChanged();
        return this;
      }

      private float l3Mag_ ;
      /**
       * <code>required float L3mag = 7;</code>
       */
      public boolean hasL3Mag() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float L3mag = 7;</code>
       */
      public float getL3Mag() {
        return l3Mag_;
      }
      /**
       * <code>required float L3mag = 7;</code>
       */
      public Builder setL3Mag(float value) {
        bitField0_ |= 0x00000040;
        l3Mag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float L3mag = 7;</code>
       */
      public Builder clearL3Mag() {
        bitField0_ = (bitField0_ & ~0x00000040);
        l3Mag_ = 0F;
        onChanged();
        return this;
      }

      private float c1Angle_ ;
      /**
       * <code>required float C1angle = 8;</code>
       */
      public boolean hasC1Angle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float C1angle = 8;</code>
       */
      public float getC1Angle() {
        return c1Angle_;
      }
      /**
       * <code>required float C1angle = 8;</code>
       */
      public Builder setC1Angle(float value) {
        bitField0_ |= 0x00000080;
        c1Angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float C1angle = 8;</code>
       */
      public Builder clearC1Angle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        c1Angle_ = 0F;
        onChanged();
        return this;
      }

      private float c1Mag_ ;
      /**
       * <code>required float C1mag = 9;</code>
       */
      public boolean hasC1Mag() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required float C1mag = 9;</code>
       */
      public float getC1Mag() {
        return c1Mag_;
      }
      /**
       * <code>required float C1mag = 9;</code>
       */
      public Builder setC1Mag(float value) {
        bitField0_ |= 0x00000100;
        c1Mag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float C1mag = 9;</code>
       */
      public Builder clearC1Mag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        c1Mag_ = 0F;
        onChanged();
        return this;
      }

      private float c2Angle_ ;
      /**
       * <code>required float C2angle = 10;</code>
       */
      public boolean hasC2Angle() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required float C2angle = 10;</code>
       */
      public float getC2Angle() {
        return c2Angle_;
      }
      /**
       * <code>required float C2angle = 10;</code>
       */
      public Builder setC2Angle(float value) {
        bitField0_ |= 0x00000200;
        c2Angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float C2angle = 10;</code>
       */
      public Builder clearC2Angle() {
        bitField0_ = (bitField0_ & ~0x00000200);
        c2Angle_ = 0F;
        onChanged();
        return this;
      }

      private float c2Mag_ ;
      /**
       * <code>required float C2mag = 11;</code>
       */
      public boolean hasC2Mag() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required float C2mag = 11;</code>
       */
      public float getC2Mag() {
        return c2Mag_;
      }
      /**
       * <code>required float C2mag = 11;</code>
       */
      public Builder setC2Mag(float value) {
        bitField0_ |= 0x00000400;
        c2Mag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float C2mag = 11;</code>
       */
      public Builder clearC2Mag() {
        bitField0_ = (bitField0_ & ~0x00000400);
        c2Mag_ = 0F;
        onChanged();
        return this;
      }

      private float c3Angle_ ;
      /**
       * <code>required float C3angle = 12;</code>
       */
      public boolean hasC3Angle() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required float C3angle = 12;</code>
       */
      public float getC3Angle() {
        return c3Angle_;
      }
      /**
       * <code>required float C3angle = 12;</code>
       */
      public Builder setC3Angle(float value) {
        bitField0_ |= 0x00000800;
        c3Angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float C3angle = 12;</code>
       */
      public Builder clearC3Angle() {
        bitField0_ = (bitField0_ & ~0x00000800);
        c3Angle_ = 0F;
        onChanged();
        return this;
      }

      private float c3Mag_ ;
      /**
       * <code>required float C3mag = 13;</code>
       */
      public boolean hasC3Mag() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required float C3mag = 13;</code>
       */
      public float getC3Mag() {
        return c3Mag_;
      }
      /**
       * <code>required float C3mag = 13;</code>
       */
      public Builder setC3Mag(float value) {
        bitField0_ |= 0x00001000;
        c3Mag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float C3mag = 13;</code>
       */
      public Builder clearC3Mag() {
        bitField0_ = (bitField0_ & ~0x00001000);
        c3Mag_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:serviceDataArchiver.syncOutput)
    }

    static {
      defaultInstance = new syncOutput(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:serviceDataArchiver.syncOutput)
  }

  public interface upmuDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:serviceDataArchiver.upmuData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 timeStamp = 1;</code>
     */
    boolean hasTimeStamp();
    /**
     * <code>required uint32 timeStamp = 1;</code>
     */
    int getTimeStamp();

    /**
     * <code>required float sampleIntervalMsec = 2;</code>
     */
    boolean hasSampleIntervalMsec();
    /**
     * <code>required float sampleIntervalMsec = 2;</code>
     */
    float getSampleIntervalMsec();

    /**
     * <code>required uint32 numSamples = 3;</code>
     */
    boolean hasNumSamples();
    /**
     * <code>required uint32 numSamples = 3;</code>
     */
    int getNumSamples();

    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    java.util.List<serviceDataArchiver.UpmuDataProtobuf.syncOutput> 
        getSampleList();
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    serviceDataArchiver.UpmuDataProtobuf.syncOutput getSample(int index);
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    int getSampleCount();
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    java.util.List<? extends serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder> 
        getSampleOrBuilderList();
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder getSampleOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code serviceDataArchiver.upmuData}
   */
  public static final class upmuData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:serviceDataArchiver.upmuData)
      upmuDataOrBuilder {
    // Use upmuData.newBuilder() to construct.
    private upmuData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private upmuData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final upmuData defaultInstance;
    public static upmuData getDefaultInstance() {
      return defaultInstance;
    }

    public upmuData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private upmuData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timeStamp_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              sampleIntervalMsec_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              numSamples_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                sample_ = new java.util.ArrayList<serviceDataArchiver.UpmuDataProtobuf.syncOutput>();
                mutable_bitField0_ |= 0x00000008;
              }
              sample_.add(input.readMessage(serviceDataArchiver.UpmuDataProtobuf.syncOutput.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          sample_ = java.util.Collections.unmodifiableList(sample_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_upmuData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_upmuData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              serviceDataArchiver.UpmuDataProtobuf.upmuData.class, serviceDataArchiver.UpmuDataProtobuf.upmuData.Builder.class);
    }

    public static com.google.protobuf.Parser<upmuData> PARSER =
        new com.google.protobuf.AbstractParser<upmuData>() {
      public upmuData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new upmuData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<upmuData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private int timeStamp_;
    /**
     * <code>required uint32 timeStamp = 1;</code>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 timeStamp = 1;</code>
     */
    public int getTimeStamp() {
      return timeStamp_;
    }

    public static final int SAMPLEINTERVALMSEC_FIELD_NUMBER = 2;
    private float sampleIntervalMsec_;
    /**
     * <code>required float sampleIntervalMsec = 2;</code>
     */
    public boolean hasSampleIntervalMsec() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float sampleIntervalMsec = 2;</code>
     */
    public float getSampleIntervalMsec() {
      return sampleIntervalMsec_;
    }

    public static final int NUMSAMPLES_FIELD_NUMBER = 3;
    private int numSamples_;
    /**
     * <code>required uint32 numSamples = 3;</code>
     */
    public boolean hasNumSamples() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 numSamples = 3;</code>
     */
    public int getNumSamples() {
      return numSamples_;
    }

    public static final int SAMPLE_FIELD_NUMBER = 4;
    private java.util.List<serviceDataArchiver.UpmuDataProtobuf.syncOutput> sample_;
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    public java.util.List<serviceDataArchiver.UpmuDataProtobuf.syncOutput> getSampleList() {
      return sample_;
    }
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    public java.util.List<? extends serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder> 
        getSampleOrBuilderList() {
      return sample_;
    }
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    public int getSampleCount() {
      return sample_.size();
    }
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    public serviceDataArchiver.UpmuDataProtobuf.syncOutput getSample(int index) {
      return sample_.get(index);
    }
    /**
     * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
     */
    public serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder getSampleOrBuilder(
        int index) {
      return sample_.get(index);
    }

    private void initFields() {
      timeStamp_ = 0;
      sampleIntervalMsec_ = 0F;
      numSamples_ = 0;
      sample_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeStamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSampleIntervalMsec()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumSamples()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSampleCount(); i++) {
        if (!getSample(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, timeStamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, sampleIntervalMsec_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, numSamples_);
      }
      for (int i = 0; i < sample_.size(); i++) {
        output.writeMessage(4, sample_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, timeStamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, sampleIntervalMsec_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numSamples_);
      }
      for (int i = 0; i < sample_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sample_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static serviceDataArchiver.UpmuDataProtobuf.upmuData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(serviceDataArchiver.UpmuDataProtobuf.upmuData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code serviceDataArchiver.upmuData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:serviceDataArchiver.upmuData)
        serviceDataArchiver.UpmuDataProtobuf.upmuDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_upmuData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_upmuData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                serviceDataArchiver.UpmuDataProtobuf.upmuData.class, serviceDataArchiver.UpmuDataProtobuf.upmuData.Builder.class);
      }

      // Construct using serviceDataArchiver.UpmuDataProtobuf.upmuData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSampleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeStamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sampleIntervalMsec_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        numSamples_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sampleBuilder_ == null) {
          sample_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          sampleBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return serviceDataArchiver.UpmuDataProtobuf.internal_static_serviceDataArchiver_upmuData_descriptor;
      }

      public serviceDataArchiver.UpmuDataProtobuf.upmuData getDefaultInstanceForType() {
        return serviceDataArchiver.UpmuDataProtobuf.upmuData.getDefaultInstance();
      }

      public serviceDataArchiver.UpmuDataProtobuf.upmuData build() {
        serviceDataArchiver.UpmuDataProtobuf.upmuData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public serviceDataArchiver.UpmuDataProtobuf.upmuData buildPartial() {
        serviceDataArchiver.UpmuDataProtobuf.upmuData result = new serviceDataArchiver.UpmuDataProtobuf.upmuData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeStamp_ = timeStamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sampleIntervalMsec_ = sampleIntervalMsec_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.numSamples_ = numSamples_;
        if (sampleBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            sample_ = java.util.Collections.unmodifiableList(sample_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sample_ = sample_;
        } else {
          result.sample_ = sampleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof serviceDataArchiver.UpmuDataProtobuf.upmuData) {
          return mergeFrom((serviceDataArchiver.UpmuDataProtobuf.upmuData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(serviceDataArchiver.UpmuDataProtobuf.upmuData other) {
        if (other == serviceDataArchiver.UpmuDataProtobuf.upmuData.getDefaultInstance()) return this;
        if (other.hasTimeStamp()) {
          setTimeStamp(other.getTimeStamp());
        }
        if (other.hasSampleIntervalMsec()) {
          setSampleIntervalMsec(other.getSampleIntervalMsec());
        }
        if (other.hasNumSamples()) {
          setNumSamples(other.getNumSamples());
        }
        if (sampleBuilder_ == null) {
          if (!other.sample_.isEmpty()) {
            if (sample_.isEmpty()) {
              sample_ = other.sample_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSampleIsMutable();
              sample_.addAll(other.sample_);
            }
            onChanged();
          }
        } else {
          if (!other.sample_.isEmpty()) {
            if (sampleBuilder_.isEmpty()) {
              sampleBuilder_.dispose();
              sampleBuilder_ = null;
              sample_ = other.sample_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sampleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSampleFieldBuilder() : null;
            } else {
              sampleBuilder_.addAllMessages(other.sample_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeStamp()) {
          
          return false;
        }
        if (!hasSampleIntervalMsec()) {
          
          return false;
        }
        if (!hasNumSamples()) {
          
          return false;
        }
        for (int i = 0; i < getSampleCount(); i++) {
          if (!getSample(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        serviceDataArchiver.UpmuDataProtobuf.upmuData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (serviceDataArchiver.UpmuDataProtobuf.upmuData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int timeStamp_ ;
      /**
       * <code>required uint32 timeStamp = 1;</code>
       */
      public boolean hasTimeStamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 timeStamp = 1;</code>
       */
      public int getTimeStamp() {
        return timeStamp_;
      }
      /**
       * <code>required uint32 timeStamp = 1;</code>
       */
      public Builder setTimeStamp(int value) {
        bitField0_ |= 0x00000001;
        timeStamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 timeStamp = 1;</code>
       */
      public Builder clearTimeStamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeStamp_ = 0;
        onChanged();
        return this;
      }

      private float sampleIntervalMsec_ ;
      /**
       * <code>required float sampleIntervalMsec = 2;</code>
       */
      public boolean hasSampleIntervalMsec() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float sampleIntervalMsec = 2;</code>
       */
      public float getSampleIntervalMsec() {
        return sampleIntervalMsec_;
      }
      /**
       * <code>required float sampleIntervalMsec = 2;</code>
       */
      public Builder setSampleIntervalMsec(float value) {
        bitField0_ |= 0x00000002;
        sampleIntervalMsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float sampleIntervalMsec = 2;</code>
       */
      public Builder clearSampleIntervalMsec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sampleIntervalMsec_ = 0F;
        onChanged();
        return this;
      }

      private int numSamples_ ;
      /**
       * <code>required uint32 numSamples = 3;</code>
       */
      public boolean hasNumSamples() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 numSamples = 3;</code>
       */
      public int getNumSamples() {
        return numSamples_;
      }
      /**
       * <code>required uint32 numSamples = 3;</code>
       */
      public Builder setNumSamples(int value) {
        bitField0_ |= 0x00000004;
        numSamples_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 numSamples = 3;</code>
       */
      public Builder clearNumSamples() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numSamples_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<serviceDataArchiver.UpmuDataProtobuf.syncOutput> sample_ =
        java.util.Collections.emptyList();
      private void ensureSampleIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          sample_ = new java.util.ArrayList<serviceDataArchiver.UpmuDataProtobuf.syncOutput>(sample_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          serviceDataArchiver.UpmuDataProtobuf.syncOutput, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder, serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder> sampleBuilder_;

      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public java.util.List<serviceDataArchiver.UpmuDataProtobuf.syncOutput> getSampleList() {
        if (sampleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sample_);
        } else {
          return sampleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public int getSampleCount() {
        if (sampleBuilder_ == null) {
          return sample_.size();
        } else {
          return sampleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public serviceDataArchiver.UpmuDataProtobuf.syncOutput getSample(int index) {
        if (sampleBuilder_ == null) {
          return sample_.get(index);
        } else {
          return sampleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder setSample(
          int index, serviceDataArchiver.UpmuDataProtobuf.syncOutput value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSampleIsMutable();
          sample_.set(index, value);
          onChanged();
        } else {
          sampleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder setSample(
          int index, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.set(index, builderForValue.build());
          onChanged();
        } else {
          sampleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder addSample(serviceDataArchiver.UpmuDataProtobuf.syncOutput value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSampleIsMutable();
          sample_.add(value);
          onChanged();
        } else {
          sampleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder addSample(
          int index, serviceDataArchiver.UpmuDataProtobuf.syncOutput value) {
        if (sampleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSampleIsMutable();
          sample_.add(index, value);
          onChanged();
        } else {
          sampleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder addSample(
          serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.add(builderForValue.build());
          onChanged();
        } else {
          sampleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder addSample(
          int index, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder builderForValue) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.add(index, builderForValue.build());
          onChanged();
        } else {
          sampleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder addAllSample(
          java.lang.Iterable<? extends serviceDataArchiver.UpmuDataProtobuf.syncOutput> values) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sample_);
          onChanged();
        } else {
          sampleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder clearSample() {
        if (sampleBuilder_ == null) {
          sample_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sampleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public Builder removeSample(int index) {
        if (sampleBuilder_ == null) {
          ensureSampleIsMutable();
          sample_.remove(index);
          onChanged();
        } else {
          sampleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder getSampleBuilder(
          int index) {
        return getSampleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder getSampleOrBuilder(
          int index) {
        if (sampleBuilder_ == null) {
          return sample_.get(index);  } else {
          return sampleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public java.util.List<? extends serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder> 
           getSampleOrBuilderList() {
        if (sampleBuilder_ != null) {
          return sampleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sample_);
        }
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder addSampleBuilder() {
        return getSampleFieldBuilder().addBuilder(
            serviceDataArchiver.UpmuDataProtobuf.syncOutput.getDefaultInstance());
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder addSampleBuilder(
          int index) {
        return getSampleFieldBuilder().addBuilder(
            index, serviceDataArchiver.UpmuDataProtobuf.syncOutput.getDefaultInstance());
      }
      /**
       * <code>repeated .serviceDataArchiver.syncOutput sample = 4;</code>
       */
      public java.util.List<serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder> 
           getSampleBuilderList() {
        return getSampleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          serviceDataArchiver.UpmuDataProtobuf.syncOutput, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder, serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder> 
          getSampleFieldBuilder() {
        if (sampleBuilder_ == null) {
          sampleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              serviceDataArchiver.UpmuDataProtobuf.syncOutput, serviceDataArchiver.UpmuDataProtobuf.syncOutput.Builder, serviceDataArchiver.UpmuDataProtobuf.syncOutputOrBuilder>(
                  sample_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          sample_ = null;
        }
        return sampleBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:serviceDataArchiver.upmuData)
    }

    static {
      defaultInstance = new upmuData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:serviceDataArchiver.upmuData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serviceDataArchiver_syncOutput_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serviceDataArchiver_syncOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serviceDataArchiver_upmuData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serviceDataArchiver_upmuData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026upmuDataProtobuf.proto\022\023serviceDataArc" +
      "hiver\"\337\001\n\nsyncOutput\022\021\n\tlockState\030\001 \002(\r\022" +
      "\017\n\007L1angle\030\002 \002(\002\022\r\n\005L1mag\030\003 \002(\002\022\017\n\007L2ang" +
      "le\030\004 \002(\002\022\r\n\005L2mag\030\005 \002(\002\022\017\n\007L3angle\030\006 \002(\002" +
      "\022\r\n\005L3mag\030\007 \002(\002\022\017\n\007C1angle\030\010 \002(\002\022\r\n\005C1ma" +
      "g\030\t \002(\002\022\017\n\007C2angle\030\n \002(\002\022\r\n\005C2mag\030\013 \002(\002\022" +
      "\017\n\007C3angle\030\014 \002(\002\022\r\n\005C3mag\030\r \002(\002\"~\n\010upmuD" +
      "ata\022\021\n\ttimeStamp\030\001 \002(\r\022\032\n\022sampleInterval" +
      "Msec\030\002 \002(\002\022\022\n\nnumSamples\030\003 \002(\r\022/\n\006sample" +
      "\030\004 \003(\0132\037.serviceDataArchiver.syncOutput"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_serviceDataArchiver_syncOutput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_serviceDataArchiver_syncOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_serviceDataArchiver_syncOutput_descriptor,
        new java.lang.String[] { "LockState", "L1Angle", "L1Mag", "L2Angle", "L2Mag", "L3Angle", "L3Mag", "C1Angle", "C1Mag", "C2Angle", "C2Mag", "C3Angle", "C3Mag", });
    internal_static_serviceDataArchiver_upmuData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_serviceDataArchiver_upmuData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_serviceDataArchiver_upmuData_descriptor,
        new java.lang.String[] { "TimeStamp", "SampleIntervalMsec", "NumSamples", "Sample", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
